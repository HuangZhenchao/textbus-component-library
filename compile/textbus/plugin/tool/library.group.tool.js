import { GroupTool, ToolType } from '@textbus/editor';
import { I18n } from '@textbus/editor';
import { alertToolConfigFactory, imagesToolConfigFactory, imageCardToolConfigFactory, todoListToolConfigFactory, timelineToolConfigFactory, stepToolConfigFactory, wordExplainToolConfigFactory, progressToolConfigFactory, jumbotronToolConfigFactory, cesiumToolConfigFactory, detailToolConfigFactory, katexInlineToolConfigFactory, katexBlockToolConfigFactory, TreeGraphToolConfigFactory } from '../../components/_public-api';
export function insertObjectToolConfigFactory(injector) {
    const i18n = injector.get(I18n);
    return {
        iconClasses: ['textbus-icon-components'],
        label: "组件库",
        items: [
            Object.assign(Object.assign({}, alertToolConfigFactory(injector)), { type: ToolType.Button }),
            Object.assign(Object.assign({}, imagesToolConfigFactory(injector)), { type: ToolType.Dialog }),
            Object.assign(Object.assign({}, imageCardToolConfigFactory(injector)), { type: ToolType.Dialog }),
            Object.assign(Object.assign({}, todoListToolConfigFactory(injector)), { type: ToolType.Button }),
            Object.assign(Object.assign({}, timelineToolConfigFactory(injector)), { type: ToolType.Button }),
            Object.assign(Object.assign({}, stepToolConfigFactory(injector)), { type: ToolType.Button }),
            Object.assign(Object.assign({}, wordExplainToolConfigFactory(injector)), { type: ToolType.Button }),
            Object.assign(Object.assign({}, progressToolConfigFactory(injector)), { type: ToolType.Button }),
            Object.assign(Object.assign({}, jumbotronToolConfigFactory(injector)), { type: ToolType.Button }),
            Object.assign(Object.assign({}, cesiumToolConfigFactory(injector)), { type: ToolType.Button }),
            Object.assign(Object.assign({}, detailToolConfigFactory(injector)), { type: ToolType.Button }),
            Object.assign(Object.assign({}, katexInlineToolConfigFactory(injector)), { type: ToolType.Button }),
            Object.assign(Object.assign({}, katexBlockToolConfigFactory(injector)), { type: ToolType.Button }),
            Object.assign(Object.assign({}, TreeGraphToolConfigFactory(injector)), { type: ToolType.Dialog }),
        ]
    };
}
export function libraryGroupTool() {
    return new GroupTool(insertObjectToolConfigFactory);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlicmFyeS5ncm91cC50b29sLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vdGV4dGJ1cy9wbHVnaW4vdG9vbC9saWJyYXJ5Lmdyb3VwLnRvb2wudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFrQixTQUFTLEVBQUUsUUFBUSxFQUE4QixNQUFNLGlCQUFpQixDQUFDO0FBQ2xHLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUV2QyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsdUJBQXVCLEVBQUUsMEJBQTBCLEVBQUUseUJBQXlCLEVBQUUseUJBQXlCLEVBQUUscUJBQXFCLEVBQUUsNEJBQTRCLEVBQUUseUJBQXlCLEVBQUUsMEJBQTBCLEVBQUUsdUJBQXVCLEVBQUUsdUJBQXVCLEVBQUUsNEJBQTRCLEVBQUUsMkJBQTJCLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUV0YSxNQUFNLFVBQVUsNkJBQTZCLENBQUMsUUFBUTtJQUNsRCxNQUFNLElBQUksR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2hDLE9BQU87UUFDSCxXQUFXLEVBQUMsQ0FBQyx5QkFBeUIsQ0FBQztRQUN2QyxLQUFLLEVBQUMsS0FBSztRQUNYLEtBQUssRUFBRTtZQUNILE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsc0JBQXNCLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsTUFBTSxFQUFDLENBQW1CO1lBQzlHLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsdUJBQXVCLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsTUFBTSxFQUFDLENBQWU7WUFDM0csTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSwwQkFBMEIsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLEVBQUUsSUFBSSxFQUFFLFFBQVEsQ0FBQyxNQUFNLEVBQUMsQ0FBZTtZQUM5RyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLHlCQUF5QixDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLE1BQU0sRUFBQyxDQUFtQjtZQUNqSCxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLHlCQUF5QixDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLE1BQU0sRUFBQyxDQUFtQjtZQUNqSCxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLHFCQUFxQixDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLE1BQU0sRUFBQyxDQUFtQjtZQUM3RyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLDRCQUE0QixDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLE1BQU0sRUFBQyxDQUFtQjtZQUNwSCxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLHlCQUF5QixDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLE1BQU0sRUFBQyxDQUFtQjtZQUNqSCxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLDBCQUEwQixDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLE1BQU0sRUFBQyxDQUFtQjtZQUNsSCxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLHVCQUF1QixDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLE1BQU0sRUFBQyxDQUFtQjtZQUMvRyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLHVCQUF1QixDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLE1BQU0sRUFBQyxDQUFtQjtZQUMvRyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLDRCQUE0QixDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLE1BQU0sRUFBQyxDQUFtQjtZQUNwSCxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLDJCQUEyQixDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLE1BQU0sRUFBQyxDQUFtQjtZQUNuSCxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLDBCQUEwQixDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLE1BQU0sRUFBQyxDQUFlO1NBQzdHO0tBQ1IsQ0FBQztBQUNOLENBQUM7QUFDRCxNQUFNLFVBQVUsZ0JBQWdCO0lBQzVCLE9BQU8sSUFBSSxTQUFTLENBQUMsNkJBQTZCLENBQUMsQ0FBQztBQUN4RCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3JvdXBUb29sQ29uZmlnLEdyb3VwVG9vbCwgVG9vbFR5cGUsIEJ1dHRvblRvb2xNZW51LCBEaWFsb2dNZW51IH0gZnJvbSAnQHRleHRidXMvZWRpdG9yJztcclxuaW1wb3J0IHsgSTE4biB9IGZyb20gJ0B0ZXh0YnVzL2VkaXRvcic7XHJcbmltcG9ydCB7YmxvY2txdW90ZVRvb2xDb25maWdGYWN0b3J5fSBmcm9tICdAdGV4dGJ1cy9lZGl0b3InO1xyXG5pbXBvcnQgeyBhbGVydFRvb2xDb25maWdGYWN0b3J5LCBpbWFnZXNUb29sQ29uZmlnRmFjdG9yeSwgaW1hZ2VDYXJkVG9vbENvbmZpZ0ZhY3RvcnksIHRvZG9MaXN0VG9vbENvbmZpZ0ZhY3RvcnksIHRpbWVsaW5lVG9vbENvbmZpZ0ZhY3RvcnksIHN0ZXBUb29sQ29uZmlnRmFjdG9yeSwgd29yZEV4cGxhaW5Ub29sQ29uZmlnRmFjdG9yeSwgcHJvZ3Jlc3NUb29sQ29uZmlnRmFjdG9yeSwganVtYm90cm9uVG9vbENvbmZpZ0ZhY3RvcnksIGNlc2l1bVRvb2xDb25maWdGYWN0b3J5LCBkZXRhaWxUb29sQ29uZmlnRmFjdG9yeSwga2F0ZXhJbmxpbmVUb29sQ29uZmlnRmFjdG9yeSwga2F0ZXhCbG9ja1Rvb2xDb25maWdGYWN0b3J5LCBUcmVlR3JhcGhUb29sQ29uZmlnRmFjdG9yeSB9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvX3B1YmxpYy1hcGknO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGluc2VydE9iamVjdFRvb2xDb25maWdGYWN0b3J5KGluamVjdG9yKXtcclxuICAgIGNvbnN0IGkxOG4gPSBpbmplY3Rvci5nZXQoSTE4bik7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGljb25DbGFzc2VzOlsndGV4dGJ1cy1pY29uLWNvbXBvbmVudHMnXSxcclxuICAgICAgICBsYWJlbDpcIue7hOS7tuW6k1wiLFxyXG4gICAgICAgIGl0ZW1zOiBbXHJcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgYWxlcnRUb29sQ29uZmlnRmFjdG9yeShpbmplY3RvcikpLCB7IHR5cGU6IFRvb2xUeXBlLkJ1dHRvbn0pIGFzIEJ1dHRvblRvb2xNZW51ICxcclxuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBpbWFnZXNUb29sQ29uZmlnRmFjdG9yeShpbmplY3RvcikpLCB7IHR5cGU6IFRvb2xUeXBlLkRpYWxvZ30pIGFzIERpYWxvZ01lbnUgLFxyXG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGltYWdlQ2FyZFRvb2xDb25maWdGYWN0b3J5KGluamVjdG9yKSksIHsgdHlwZTogVG9vbFR5cGUuRGlhbG9nfSkgYXMgRGlhbG9nTWVudSAsXHJcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgdG9kb0xpc3RUb29sQ29uZmlnRmFjdG9yeShpbmplY3RvcikpLCB7IHR5cGU6IFRvb2xUeXBlLkJ1dHRvbn0pIGFzIEJ1dHRvblRvb2xNZW51ICxcclxuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB0aW1lbGluZVRvb2xDb25maWdGYWN0b3J5KGluamVjdG9yKSksIHsgdHlwZTogVG9vbFR5cGUuQnV0dG9ufSkgYXMgQnV0dG9uVG9vbE1lbnUgLFxyXG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHN0ZXBUb29sQ29uZmlnRmFjdG9yeShpbmplY3RvcikpLCB7IHR5cGU6IFRvb2xUeXBlLkJ1dHRvbn0pIGFzIEJ1dHRvblRvb2xNZW51ICxcclxuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB3b3JkRXhwbGFpblRvb2xDb25maWdGYWN0b3J5KGluamVjdG9yKSksIHsgdHlwZTogVG9vbFR5cGUuQnV0dG9ufSkgYXMgQnV0dG9uVG9vbE1lbnUgLFxyXG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHByb2dyZXNzVG9vbENvbmZpZ0ZhY3RvcnkoaW5qZWN0b3IpKSwgeyB0eXBlOiBUb29sVHlwZS5CdXR0b259KSBhcyBCdXR0b25Ub29sTWVudSAsXHJcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwganVtYm90cm9uVG9vbENvbmZpZ0ZhY3RvcnkoaW5qZWN0b3IpKSwgeyB0eXBlOiBUb29sVHlwZS5CdXR0b259KSBhcyBCdXR0b25Ub29sTWVudSAsXHJcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgY2VzaXVtVG9vbENvbmZpZ0ZhY3RvcnkoaW5qZWN0b3IpKSwgeyB0eXBlOiBUb29sVHlwZS5CdXR0b259KSBhcyBCdXR0b25Ub29sTWVudSAsXHJcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZGV0YWlsVG9vbENvbmZpZ0ZhY3RvcnkoaW5qZWN0b3IpKSwgeyB0eXBlOiBUb29sVHlwZS5CdXR0b259KSBhcyBCdXR0b25Ub29sTWVudSAsXHJcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwga2F0ZXhJbmxpbmVUb29sQ29uZmlnRmFjdG9yeShpbmplY3RvcikpLCB7IHR5cGU6IFRvb2xUeXBlLkJ1dHRvbn0pIGFzIEJ1dHRvblRvb2xNZW51ICxcclxuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBrYXRleEJsb2NrVG9vbENvbmZpZ0ZhY3RvcnkoaW5qZWN0b3IpKSwgeyB0eXBlOiBUb29sVHlwZS5CdXR0b259KSBhcyBCdXR0b25Ub29sTWVudSAsXHJcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgVHJlZUdyYXBoVG9vbENvbmZpZ0ZhY3RvcnkoaW5qZWN0b3IpKSwgeyB0eXBlOiBUb29sVHlwZS5EaWFsb2d9KSBhcyBEaWFsb2dNZW51ICxcclxuICAgICAgICAgICAgXVxyXG4gICAgfTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gbGlicmFyeUdyb3VwVG9vbCgpe1xyXG4gICAgcmV0dXJuIG5ldyBHcm91cFRvb2woaW5zZXJ0T2JqZWN0VG9vbENvbmZpZ0ZhY3RvcnkpO1xyXG59Il19