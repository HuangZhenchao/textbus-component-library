import { ButtonTool } from '@textbus/editor';
import { Commander, Selection } from '@textbus/core';
import { stepComponent, StepSlot } from './step.component';
export function stepToolConfigFactory(injector) {
    const commander = injector.get(Commander);
    const selection = injector.get(Selection);
    return {
        label: '步骤条',
        tooltip: '步骤条',
        onClick() {
            let slots = [new StepSlot()];
            const initState = {
                step: 0,
            };
            const component = stepComponent.createInstance(injector, { slots: slots, state: initState });
            commander.insert(component);
            selection.setPosition(slots[0], 0);
        }
    };
}
//export const stepTool:ButtonTool= new ButtonTool(stepToolConfigFactory)
export function stepTool() {
    return new ButtonTool(stepToolConfigFactory);
}
export const stepExample = `<img alt="示例" src="data:image/svg+xml;charset=UTF-8,${encodeURIComponent('<svg width="100" height="70" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g><rect fill="#fff" height="100%" width="100%"/></g><defs><g id="item"><circle r="2" cx="10" cy="12"></circle><line x1="12" y1="12" x2="38" y2="12" stroke-width="0.5"></line><text font-family="Helvetica, Arial, sans-serif" font-size="5" x="8" y="22" stroke-width="0" stroke="#000" fill="#000000">标题</text><text font-family="Helvetica, Arial, sans-serif" font-size="4.5" x="8" y="27" stroke-width="0" stroke="#000" fill="#000">描述信息...</text></g></defs><use xlink:href="#item" transform="translate(0, 20)" fill="#15bd9a" stroke="#15bd9a"></use><use xlink:href="#item" transform="translate(30, 20)" fill="#1296db" stroke="#1296db"></use><use xlink:href="#item" transform="translate(60, 20)" fill="#aaa" stroke="#aaa"></use></svg>')}">`;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcC50b29sLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vdGV4dGJ1cy9jb21wb25lbnRzL3N0ZXAvc3RlcC50b29sLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQWtCLE1BQU0saUJBQWlCLENBQUE7QUFDNUQsT0FBTyxFQUFFLFNBQVMsRUFBcUIsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFBO0FBQ3ZFLE9BQU8sRUFBQyxhQUFhLEVBQUUsUUFBUSxFQUFZLE1BQU0sa0JBQWtCLENBQUE7QUFFbkUsTUFBTSxVQUFVLHFCQUFxQixDQUFDLFFBQVE7SUFDMUMsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQTtJQUN6QyxNQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFBO0lBQ3pDLE9BQU87UUFDSCxLQUFLLEVBQUUsS0FBSztRQUNaLE9BQU8sRUFBQyxLQUFLO1FBQ2IsT0FBTztZQUVILElBQUksS0FBSyxHQUFDLENBQUMsSUFBSSxRQUFRLEVBQUUsQ0FBQyxDQUFDO1lBQzNCLE1BQU0sU0FBUyxHQUFXO2dCQUN0QixJQUFJLEVBQUMsQ0FBQzthQUNULENBQUE7WUFDRCxNQUFNLFNBQVMsR0FBRyxhQUFhLENBQUMsY0FBYyxDQUFDLFFBQVEsRUFBRSxFQUFDLEtBQUssRUFBQyxLQUFLLEVBQUMsS0FBSyxFQUFDLFNBQVMsRUFBQyxDQUFDLENBQUE7WUFDdkYsU0FBUyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQTtZQUMzQixTQUFTLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQTtRQUN0QyxDQUFDO0tBQ0osQ0FBQTtBQUNMLENBQUM7QUFFRCx5RUFBeUU7QUFDekUsTUFBTSxVQUFVLFFBQVE7SUFDcEIsT0FBTyxJQUFJLFVBQVUsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFBO0FBQ2hELENBQUM7QUFDRCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUMsdURBQXVELGtCQUFrQixDQUFDLG8wQkFBbzBCLENBQUMsSUFBSSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnV0dG9uVG9vbCxCdXR0b25Ub29sQ29uZmlnfSBmcm9tICdAdGV4dGJ1cy9lZGl0b3InXHJcbmltcG9ydCB7IENvbW1hbmRlciwgQ29udGVudFR5cGUsIFNsb3QsIFNlbGVjdGlvbiB9IGZyb20gJ0B0ZXh0YnVzL2NvcmUnXHJcbmltcG9ydCB7c3RlcENvbXBvbmVudCwgU3RlcFNsb3QsIHN0ZXBTdGF0ZX0gZnJvbSAnLi9zdGVwLmNvbXBvbmVudCdcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzdGVwVG9vbENvbmZpZ0ZhY3RvcnkoaW5qZWN0b3IpOkJ1dHRvblRvb2xDb25maWcge1xyXG4gICAgY29uc3QgY29tbWFuZGVyID0gaW5qZWN0b3IuZ2V0KENvbW1hbmRlcilcclxuICAgIGNvbnN0IHNlbGVjdGlvbiA9IGluamVjdG9yLmdldChTZWxlY3Rpb24pXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGxhYmVsOiAn5q2l6aqk5p2hJyxcclxuICAgICAgICB0b29sdGlwOifmraXpqqTmnaEnLFxyXG4gICAgICAgIG9uQ2xpY2soKSB7XHJcblxyXG4gICAgICAgICAgICBsZXQgc2xvdHM9W25ldyBTdGVwU2xvdCgpXTtcclxuICAgICAgICAgICAgY29uc3QgaW5pdFN0YXRlOnN0ZXBTdGF0ZT17XHJcbiAgICAgICAgICAgICAgICBzdGVwOjAsICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNvbnN0IGNvbXBvbmVudCA9IHN0ZXBDb21wb25lbnQuY3JlYXRlSW5zdGFuY2UoaW5qZWN0b3IsIHtzbG90czpzbG90cyxzdGF0ZTppbml0U3RhdGV9KVxyXG4gICAgICAgICAgICBjb21tYW5kZXIuaW5zZXJ0KGNvbXBvbmVudClcclxuICAgICAgICAgICAgc2VsZWN0aW9uLnNldFBvc2l0aW9uKHNsb3RzWzBdLCAwKVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLy9leHBvcnQgY29uc3Qgc3RlcFRvb2w6QnV0dG9uVG9vbD0gbmV3IEJ1dHRvblRvb2woc3RlcFRvb2xDb25maWdGYWN0b3J5KVxyXG5leHBvcnQgZnVuY3Rpb24gc3RlcFRvb2woKXtcclxuICAgIHJldHVybiBuZXcgQnV0dG9uVG9vbChzdGVwVG9vbENvbmZpZ0ZhY3RvcnkpXHJcbn1cclxuZXhwb3J0IGNvbnN0IHN0ZXBFeGFtcGxlPWA8aW1nIGFsdD1cIuekuuS+i1wiIHNyYz1cImRhdGE6aW1hZ2Uvc3ZnK3htbDtjaGFyc2V0PVVURi04LCR7ZW5jb2RlVVJJQ29tcG9uZW50KCc8c3ZnIHdpZHRoPVwiMTAwXCIgaGVpZ2h0PVwiNzBcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgeG1sbnM6eGxpbms9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCI+PGc+PHJlY3QgZmlsbD1cIiNmZmZcIiBoZWlnaHQ9XCIxMDAlXCIgd2lkdGg9XCIxMDAlXCIvPjwvZz48ZGVmcz48ZyBpZD1cIml0ZW1cIj48Y2lyY2xlIHI9XCIyXCIgY3g9XCIxMFwiIGN5PVwiMTJcIj48L2NpcmNsZT48bGluZSB4MT1cIjEyXCIgeTE9XCIxMlwiIHgyPVwiMzhcIiB5Mj1cIjEyXCIgc3Ryb2tlLXdpZHRoPVwiMC41XCI+PC9saW5lPjx0ZXh0IGZvbnQtZmFtaWx5PVwiSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZlwiIGZvbnQtc2l6ZT1cIjVcIiB4PVwiOFwiIHk9XCIyMlwiIHN0cm9rZS13aWR0aD1cIjBcIiBzdHJva2U9XCIjMDAwXCIgZmlsbD1cIiMwMDAwMDBcIj7moIfpopg8L3RleHQ+PHRleHQgZm9udC1mYW1pbHk9XCJIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmXCIgZm9udC1zaXplPVwiNC41XCIgeD1cIjhcIiB5PVwiMjdcIiBzdHJva2Utd2lkdGg9XCIwXCIgc3Ryb2tlPVwiIzAwMFwiIGZpbGw9XCIjMDAwXCI+5o+P6L+w5L+h5oGvLi4uPC90ZXh0PjwvZz48L2RlZnM+PHVzZSB4bGluazpocmVmPVwiI2l0ZW1cIiB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoMCwgMjApXCIgZmlsbD1cIiMxNWJkOWFcIiBzdHJva2U9XCIjMTViZDlhXCI+PC91c2U+PHVzZSB4bGluazpocmVmPVwiI2l0ZW1cIiB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoMzAsIDIwKVwiIGZpbGw9XCIjMTI5NmRiXCIgc3Ryb2tlPVwiIzEyOTZkYlwiPjwvdXNlPjx1c2UgeGxpbms6aHJlZj1cIiNpdGVtXCIgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDYwLCAyMClcIiBmaWxsPVwiI2FhYVwiIHN0cm9rZT1cIiNhYWFcIj48L3VzZT48L3N2Zz4nKX1cIj5gO1xyXG4gICJdfQ==