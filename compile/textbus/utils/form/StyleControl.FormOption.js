import { FormRadio, FormTextField, I18n } from "@textbus/editor";
import { SizeSetter } from "./SizeSetter.FormItem";
export function getStyleControlFormConfig(injector) {
    const i18n = injector.get(I18n);
    const childI18n = i18n.getContext('plugins.toolbar.imageTool.view');
    const StyleControlFormConfig = {
        items: [
            new SizeSetter('size', childI18n.getContext('sizeSetter')),
            new FormTextField({
                label: "边距设置",
                name: 'margin',
                value: "0px 0px 0px 0px",
                placeholder: "0px 0px 0px 0px",
                validateFn(value) {
                    if (!value) {
                        return childI18n.get('validateErrorMessage');
                    }
                    return false;
                }
            }),
            new FormRadio({
                label: childI18n.get('float.label'),
                name: 'float',
                values: [{
                        label: childI18n.get('float.noFloatLabel'),
                        value: 'none',
                        default: true
                    }, {
                        label: childI18n.get('float.floatToLeftLabel'),
                        value: 'left'
                    }, {
                        label: childI18n.get('float.floatToRightLabel'),
                        value: 'right'
                    }]
            }),
        ]
    };
    return StyleControlFormConfig;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3R5bGVDb250cm9sLkZvcm1PcHRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi90ZXh0YnVzL3V0aWxzL2Zvcm0vU3R5bGVDb250cm9sLkZvcm1PcHRpb24udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBb0IsU0FBUyxFQUFFLGFBQWEsRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNuRixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFbkQsTUFBTSxVQUFVLHlCQUF5QixDQUFDLFFBQVE7SUFDOUMsTUFBTSxJQUFJLEdBQUcsUUFBUSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNoQyxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLGdDQUFnQyxDQUFDLENBQUM7SUFDcEUsTUFBTSxzQkFBc0IsR0FBWTtRQUNwQyxLQUFLLEVBQUU7WUFDSCxJQUFJLFVBQVUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUMxRCxJQUFJLGFBQWEsQ0FBQztnQkFDaEIsS0FBSyxFQUFFLE1BQU07Z0JBQ2IsSUFBSSxFQUFFLFFBQVE7Z0JBQ2QsS0FBSyxFQUFFLGlCQUFpQjtnQkFDeEIsV0FBVyxFQUFFLGlCQUFpQjtnQkFDOUIsVUFBVSxDQUFDLEtBQUs7b0JBQ2QsSUFBSSxDQUFDLEtBQUssRUFBRTt3QkFDVixPQUFPLFNBQVMsQ0FBQyxHQUFHLENBQUMsc0JBQXNCLENBQUMsQ0FBQztxQkFDOUM7b0JBQ0QsT0FBTyxLQUFLLENBQUM7Z0JBQ2YsQ0FBQzthQUNGLENBQUM7WUFDRixJQUFJLFNBQVMsQ0FBQztnQkFDWixLQUFLLEVBQUUsU0FBUyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUM7Z0JBQ25DLElBQUksRUFBRSxPQUFPO2dCQUNiLE1BQU0sRUFBRSxDQUFDO3dCQUNQLEtBQUssRUFBRSxTQUFTLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDO3dCQUMxQyxLQUFLLEVBQUUsTUFBTTt3QkFDYixPQUFPLEVBQUUsSUFBSTtxQkFDZCxFQUFFO3dCQUNELEtBQUssRUFBRSxTQUFTLENBQUMsR0FBRyxDQUFDLHdCQUF3QixDQUFDO3dCQUM5QyxLQUFLLEVBQUUsTUFBTTtxQkFDZCxFQUFFO3dCQUNELEtBQUssRUFBRSxTQUFTLENBQUMsR0FBRyxDQUFDLHlCQUF5QixDQUFDO3dCQUMvQyxLQUFLLEVBQUUsT0FBTztxQkFDZixDQUFDO2FBQ0gsQ0FBQztTQWtCSDtLQUNOLENBQUE7SUFDRCxPQUFPLHNCQUFzQixDQUFBO0FBQ2pDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGb3JtLCBGb3JtQ29uZmlnLCBGb3JtUmFkaW8sIEZvcm1UZXh0RmllbGQsIEkxOG4gfSBmcm9tIFwiQHRleHRidXMvZWRpdG9yXCI7XHJcbmltcG9ydCB7IFNpemVTZXR0ZXIgfSBmcm9tIFwiLi9TaXplU2V0dGVyLkZvcm1JdGVtXCI7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0U3R5bGVDb250cm9sRm9ybUNvbmZpZyhpbmplY3Rvcil7XHJcbiAgICBjb25zdCBpMThuID0gaW5qZWN0b3IuZ2V0KEkxOG4pO1xyXG4gICAgY29uc3QgY2hpbGRJMThuID0gaTE4bi5nZXRDb250ZXh0KCdwbHVnaW5zLnRvb2xiYXIuaW1hZ2VUb29sLnZpZXcnKTtcclxuICAgIGNvbnN0IFN0eWxlQ29udHJvbEZvcm1Db25maWc6Rm9ybUNvbmZpZz17XHJcbiAgICAgICAgaXRlbXM6IFtcclxuICAgICAgICAgICAgbmV3IFNpemVTZXR0ZXIoJ3NpemUnLCBjaGlsZEkxOG4uZ2V0Q29udGV4dCgnc2l6ZVNldHRlcicpKSxcclxuICAgICAgICAgICAgbmV3IEZvcm1UZXh0RmllbGQoe1xyXG4gICAgICAgICAgICAgIGxhYmVsOiBcIui+uei3neiuvue9rlwiLFxyXG4gICAgICAgICAgICAgIG5hbWU6ICdtYXJnaW4nLFxyXG4gICAgICAgICAgICAgIHZhbHVlOiBcIjBweCAwcHggMHB4IDBweFwiLFxyXG4gICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBcIjBweCAwcHggMHB4IDBweFwiLFxyXG4gICAgICAgICAgICAgIHZhbGlkYXRlRm4odmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIGlmICghdmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgcmV0dXJuIGNoaWxkSTE4bi5nZXQoJ3ZhbGlkYXRlRXJyb3JNZXNzYWdlJyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KSxcclxuICAgICAgICAgICAgbmV3IEZvcm1SYWRpbyh7XHJcbiAgICAgICAgICAgICAgbGFiZWw6IGNoaWxkSTE4bi5nZXQoJ2Zsb2F0LmxhYmVsJyksXHJcbiAgICAgICAgICAgICAgbmFtZTogJ2Zsb2F0JyxcclxuICAgICAgICAgICAgICB2YWx1ZXM6IFt7XHJcbiAgICAgICAgICAgICAgICBsYWJlbDogY2hpbGRJMThuLmdldCgnZmxvYXQubm9GbG9hdExhYmVsJyksXHJcbiAgICAgICAgICAgICAgICB2YWx1ZTogJ25vbmUnLFxyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDogdHJ1ZVxyXG4gICAgICAgICAgICAgIH0sIHtcclxuICAgICAgICAgICAgICAgIGxhYmVsOiBjaGlsZEkxOG4uZ2V0KCdmbG9hdC5mbG9hdFRvTGVmdExhYmVsJyksXHJcbiAgICAgICAgICAgICAgICB2YWx1ZTogJ2xlZnQnXHJcbiAgICAgICAgICAgICAgfSwge1xyXG4gICAgICAgICAgICAgICAgbGFiZWw6IGNoaWxkSTE4bi5nZXQoJ2Zsb2F0LmZsb2F0VG9SaWdodExhYmVsJyksXHJcbiAgICAgICAgICAgICAgICB2YWx1ZTogJ3JpZ2h0J1xyXG4gICAgICAgICAgICAgIH1dXHJcbiAgICAgICAgICAgIH0pLFxyXG4gICAgICAgICAgICAvKlxyXG4gICAgICAgICAgICBuZXcgRm9ybVRleHRGaWVsZCh7XHJcbiAgICAgICAgICAgICAgbGFiZWw6IGNoaWxkSTE4bi5nZXQoJ2xpbmtMYWJlbCcpLFxyXG4gICAgICAgICAgICAgIG5hbWU6ICdzcmMnLFxyXG4gICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBjaGlsZEkxOG4uZ2V0KCdsaW5rSW5wdXRQbGFjZWhvbGRlcicpLFxyXG4gICAgICAgICAgICAgIGNhblVwbG9hZDogdHJ1ZSxcclxuICAgICAgICAgICAgICB1cGxvYWRUeXBlOiAnaW1hZ2UnLFxyXG4gICAgICAgICAgICAgIHVwbG9hZEJ0blRleHQ6IGNoaWxkSTE4bi5nZXQoJ3VwbG9hZEJ0blRleHQnKSxcclxuICAgICAgICAgICAgICB1cGxvYWRNdWx0aXBsZTogdHJ1ZSxcclxuICAgICAgICAgICAgICBmaWxlVXBsb2FkZXIsXHJcbiAgICAgICAgICAgICAgdmFsaWRhdGVGbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgICBpZiAoIXZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY2hpbGRJMThuLmdldCgndmFsaWRhdGVFcnJvck1lc3NhZ2UnKTtcclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSksKi9cclxuICAgICAgICAgIF1cclxuICAgIH1cclxuICAgIHJldHVybiBTdHlsZUNvbnRyb2xGb3JtQ29uZmlnXHJcbn1cclxuIl19