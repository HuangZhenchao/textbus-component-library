import { Commander, QueryStateType } from '@textbus/core';
import { DialogTool, Editor, FileUploader, Form, FormRadio, FormTextField, I18n } from "@textbus/editor";
import { FormStatic } from '@textbus/editor/bundles/uikit/forms/form-static';
import { concatStyle } from "./output";
export let bPkg = false;
export let styleLink = "";
export function pkgStyleToolConfigFactory(injector) {
    const i18n = injector.get(I18n);
    const editor = injector.get(Editor);
    const commander = injector.get(Commander);
    const fileUploader = injector.get(FileUploader);
    const childI18n = i18n.getContext('plugins.toolbar.imageTool.view');
    const btn = document.createElement("div");
    btn.innerText = "打印到控制台";
    btn.setAttribute("style", "height:30px;line-height:30px;color:#fff;background-color:#0f7fba;text-align:center;cursor:pointer;");
    btn.addEventListener("click", () => {
        let style = concatStyle(editor.getContents());
        style = style.replace(";", ";\n  ")
            .replace("}", ";\n}\n")
            .replace("{", "{\n  ");
        console.log("1111", style);
        //TODO:或许可以下载文件
    });
    const form = new Form({
        title: "组件style替换为link",
        cancelBtnText: childI18n.get('cancelBtnText'),
        confirmBtnText: childI18n.get('confirmBtnText'),
        items: [
            new FormStatic({
                label: "导出组件style",
                content: btn
            }),
            new FormTextField({
                label: "link href",
                name: 'href',
                value: "http://106.55.148.203:8002/upload/textbus.component.style.css",
                placeholder: childI18n.get('linkInputPlaceholder'),
                validateFn(value) {
                    if (!value) {
                        return childI18n.get('validateErrorMessage');
                    }
                    return false;
                }
            }),
            new FormRadio({
                name: "replace",
                label: "是否替换",
                values: [
                    { label: "是", value: "yes", default: true },
                    { label: "否", value: "no", default: false }
                ]
            })
        ]
    });
    return {
        iconClasses: ['textbus-icon-image'],
        label: '图片批量',
        tooltip: i18n.get('plugins.toolbar.imageTool.tooltip'),
        viewController: form,
        queryState() {
            return {
                state: QueryStateType.Normal,
                value: null
            };
        },
        useValue(formValue) {
            console.log(formValue);
            bPkg = formValue.replace;
            styleLink = formValue.href;
            console.log(bPkg, styleLink);
        }
    };
}
export function pkgStyleTool() {
    return new DialogTool(pkgStyleToolConfigFactory);
}
//# sourceMappingURL=image.tool.js.map
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0dGluZ3MucGtnU3R5bGUudG9vbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3RleHRidXMvdXRpbHMvc2V0dGluZ3MucGtnU3R5bGUudG9vbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFTLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqRSxPQUFPLEVBQVksVUFBVSxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsSUFBSSxFQUFZLFNBQVMsRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFpQixNQUFNLGlCQUFpQixDQUFDO0FBQzVJLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxpREFBaUQsQ0FBQztBQUM3RSxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sVUFBVSxDQUFBO0FBQ3BDLE1BQU0sQ0FBQyxJQUFJLElBQUksR0FBQyxLQUFLLENBQUM7QUFDdEIsTUFBTSxDQUFDLElBQUksU0FBUyxHQUFDLEVBQUUsQ0FBQztBQUN4QixNQUFNLFVBQVUseUJBQXlCLENBQUMsUUFBUTtJQUM5QyxNQUFNLElBQUksR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2hDLE1BQU0sTUFBTSxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDcEMsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUMxQyxNQUFNLFlBQVksR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ2hELE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsZ0NBQWdDLENBQUMsQ0FBQztJQUNwRSxNQUFNLEdBQUcsR0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLEdBQUcsQ0FBQyxTQUFTLEdBQUMsUUFBUSxDQUFBO0lBQ3RCLEdBQUcsQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFDLG9HQUFvRyxDQUFDLENBQUE7SUFDOUgsR0FBRyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBQyxHQUFFLEVBQUU7UUFDN0IsSUFBSSxLQUFLLEdBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO1FBQzVDLEtBQUssR0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBQyxPQUFPLENBQUM7YUFDL0IsT0FBTyxDQUFDLEdBQUcsRUFBQyxRQUFRLENBQUM7YUFDckIsT0FBTyxDQUFDLEdBQUcsRUFBQyxPQUFPLENBQUMsQ0FBQTtRQUVyQixPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBQyxLQUFLLENBQUMsQ0FBQztRQUMxQixlQUFlO0lBQ25CLENBQUMsQ0FBQyxDQUFDO0lBQ0gsTUFBTSxJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUM7UUFDbEIsS0FBSyxFQUFFLGdCQUFnQjtRQUN2QixhQUFhLEVBQUUsU0FBUyxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUM7UUFDN0MsY0FBYyxFQUFFLFNBQVMsQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUM7UUFDL0MsS0FBSyxFQUFFO1lBQ0gsSUFBSSxVQUFVLENBQUM7Z0JBQ1gsS0FBSyxFQUFFLFdBQVc7Z0JBQ2xCLE9BQU8sRUFBQyxHQUFHO2FBQ2QsQ0FBQztZQUNGLElBQUksYUFBYSxDQUFDO2dCQUNkLEtBQUssRUFBRSxXQUFXO2dCQUNsQixJQUFJLEVBQUUsTUFBTTtnQkFDWixLQUFLLEVBQUMsK0RBQStEO2dCQUNyRSxXQUFXLEVBQUUsU0FBUyxDQUFDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQztnQkFDbEQsVUFBVSxDQUFDLEtBQUs7b0JBQ1osSUFBSSxDQUFDLEtBQUssRUFBRTt3QkFDUixPQUFPLFNBQVMsQ0FBQyxHQUFHLENBQUMsc0JBQXNCLENBQUMsQ0FBQztxQkFDaEQ7b0JBQ0QsT0FBTyxLQUFLLENBQUM7Z0JBQ2pCLENBQUM7YUFDSixDQUFDO1lBQ0YsSUFBSSxTQUFTLENBQUM7Z0JBQ1YsSUFBSSxFQUFDLFNBQVM7Z0JBQ2QsS0FBSyxFQUFDLE1BQU07Z0JBQ1osTUFBTSxFQUFDO29CQUNILEVBQUMsS0FBSyxFQUFDLEdBQUcsRUFBQyxLQUFLLEVBQUMsS0FBSyxFQUFDLE9BQU8sRUFBQyxJQUFJLEVBQUM7b0JBQ3BDLEVBQUMsS0FBSyxFQUFDLEdBQUcsRUFBQyxLQUFLLEVBQUMsSUFBSSxFQUFDLE9BQU8sRUFBQyxLQUFLLEVBQUM7aUJBQ3ZDO2FBQ0osQ0FBQztTQUVMO0tBQ0osQ0FBQyxDQUFDO0lBQ0gsT0FBTztRQUNILFdBQVcsRUFBRSxDQUFDLG9CQUFvQixDQUFDO1FBQ25DLEtBQUssRUFBQyxNQUFNO1FBQ1osT0FBTyxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsbUNBQW1DLENBQUM7UUFDdEQsY0FBYyxFQUFFLElBQUk7UUFDcEIsVUFBVTtZQUNOLE9BQU87Z0JBQ0gsS0FBSyxFQUFFLGNBQWMsQ0FBQyxNQUFNO2dCQUM1QixLQUFLLEVBQUUsSUFBSTthQUNkLENBQUM7UUFDTixDQUFDO1FBQ0QsUUFBUSxDQUFDLFNBQVM7WUFDZCxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFBO1lBQ3RCLElBQUksR0FBQyxTQUFTLENBQUMsT0FBTyxDQUFBO1lBQ3RCLFNBQVMsR0FBQyxTQUFTLENBQUMsSUFBSSxDQUFBO1lBQ3hCLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFDLFNBQVMsQ0FBQyxDQUFBO1FBQy9CLENBQUM7S0FDSixDQUFDO0FBQ04sQ0FBQztBQUNELE1BQU0sVUFBVSxZQUFZO0lBQ3hCLE9BQU8sSUFBSSxVQUFVLENBQUMseUJBQXlCLENBQUMsQ0FBQztBQUNyRCxDQUFDO0FBQ0Qsc0NBQXNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbWFuZGVyLCBRdWVyeSwgUXVlcnlTdGF0ZVR5cGUgfSBmcm9tICdAdGV4dGJ1cy9jb3JlJztcclxuaW1wb3J0IHsgY3JlYXRlRWxlbWVudCwgY3JlYXRlVGV4dE5vZGUgfSBmcm9tICdAdGV4dGJ1cy9icm93c2VyJztcclxuaW1wb3J0IHtBdHRyU3RhdGUsIERpYWxvZ1Rvb2wsIEVkaXRvciwgRmlsZVVwbG9hZGVyLCBGb3JtLCBGb3JtSXRlbSwgRm9ybVJhZGlvLCBGb3JtVGV4dEZpZWxkLCBJMThuLCBpbWFnZUNvbXBvbmVudH0gZnJvbSBcIkB0ZXh0YnVzL2VkaXRvclwiO1xyXG5pbXBvcnQgeyBGb3JtU3RhdGljIH0gZnJvbSAnQHRleHRidXMvZWRpdG9yL2J1bmRsZXMvdWlraXQvZm9ybXMvZm9ybS1zdGF0aWMnO1xyXG5pbXBvcnQge2NvbmNhdFN0eWxlfSBmcm9tIFwiLi9vdXRwdXRcIlxyXG5leHBvcnQgbGV0IGJQa2c9ZmFsc2U7XHJcbmV4cG9ydCBsZXQgc3R5bGVMaW5rPVwiXCI7XHJcbmV4cG9ydCBmdW5jdGlvbiBwa2dTdHlsZVRvb2xDb25maWdGYWN0b3J5KGluamVjdG9yKSB7XHJcbiAgICBjb25zdCBpMThuID0gaW5qZWN0b3IuZ2V0KEkxOG4pO1xyXG4gICAgY29uc3QgZWRpdG9yID0gaW5qZWN0b3IuZ2V0KEVkaXRvcik7XHJcbiAgICBjb25zdCBjb21tYW5kZXIgPSBpbmplY3Rvci5nZXQoQ29tbWFuZGVyKTtcclxuICAgIGNvbnN0IGZpbGVVcGxvYWRlciA9IGluamVjdG9yLmdldChGaWxlVXBsb2FkZXIpO1xyXG4gICAgY29uc3QgY2hpbGRJMThuID0gaTE4bi5nZXRDb250ZXh0KCdwbHVnaW5zLnRvb2xiYXIuaW1hZ2VUb29sLnZpZXcnKTtcclxuICAgIGNvbnN0IGJ0bj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgYnRuLmlubmVyVGV4dD1cIuaJk+WNsOWIsOaOp+WItuWPsFwiXHJcbiAgICBidG4uc2V0QXR0cmlidXRlKFwic3R5bGVcIixcImhlaWdodDozMHB4O2xpbmUtaGVpZ2h0OjMwcHg7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMwZjdmYmE7dGV4dC1hbGlnbjpjZW50ZXI7Y3Vyc29yOnBvaW50ZXI7XCIpXHJcbiAgICBidG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKCk9PnsgICAgICAgIFxyXG4gICAgICAgIGxldCBzdHlsZT1jb25jYXRTdHlsZShlZGl0b3IuZ2V0Q29udGVudHMoKSk7XHJcbiAgICAgICAgc3R5bGU9c3R5bGUucmVwbGFjZShcIjtcIixcIjtcXG4gIFwiKVxyXG4gICAgICAgIC5yZXBsYWNlKFwifVwiLFwiO1xcbn1cXG5cIilcclxuICAgICAgICAucmVwbGFjZShcIntcIixcIntcXG4gIFwiKVxyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiMTExMVwiLHN0eWxlKTtcclxuICAgICAgICAvL1RPRE865oiW6K645Y+v5Lul5LiL6L295paH5Lu2XHJcbiAgICB9KTtcclxuICAgIGNvbnN0IGZvcm0gPSBuZXcgRm9ybSh7XHJcbiAgICAgICAgdGl0bGU6IFwi57uE5Lu2c3R5bGXmm7/mjaLkuLpsaW5rXCIsXHJcbiAgICAgICAgY2FuY2VsQnRuVGV4dDogY2hpbGRJMThuLmdldCgnY2FuY2VsQnRuVGV4dCcpLFxyXG4gICAgICAgIGNvbmZpcm1CdG5UZXh0OiBjaGlsZEkxOG4uZ2V0KCdjb25maXJtQnRuVGV4dCcpLFxyXG4gICAgICAgIGl0ZW1zOiBbXHJcbiAgICAgICAgICAgIG5ldyBGb3JtU3RhdGljKHtcclxuICAgICAgICAgICAgICAgIGxhYmVsOiBcIuWvvOWHuue7hOS7tnN0eWxlXCIsXHJcbiAgICAgICAgICAgICAgICBjb250ZW50OmJ0blxyXG4gICAgICAgICAgICB9KSxcclxuICAgICAgICAgICAgbmV3IEZvcm1UZXh0RmllbGQoe1xyXG4gICAgICAgICAgICAgICAgbGFiZWw6IFwibGluayBocmVmXCIsXHJcbiAgICAgICAgICAgICAgICBuYW1lOiAnaHJlZicsXHJcbiAgICAgICAgICAgICAgICB2YWx1ZTpcImh0dHA6Ly8xMDYuNTUuMTQ4LjIwMzo4MDAyL3VwbG9hZC90ZXh0YnVzLmNvbXBvbmVudC5zdHlsZS5jc3NcIixcclxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBjaGlsZEkxOG4uZ2V0KCdsaW5rSW5wdXRQbGFjZWhvbGRlcicpLFxyXG4gICAgICAgICAgICAgICAgdmFsaWRhdGVGbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICghdmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNoaWxkSTE4bi5nZXQoJ3ZhbGlkYXRlRXJyb3JNZXNzYWdlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSksXHJcbiAgICAgICAgICAgIG5ldyBGb3JtUmFkaW8oe1xyXG4gICAgICAgICAgICAgICAgbmFtZTpcInJlcGxhY2VcIixcclxuICAgICAgICAgICAgICAgIGxhYmVsOlwi5piv5ZCm5pu/5o2iXCIsXHJcbiAgICAgICAgICAgICAgICB2YWx1ZXM6W1xyXG4gICAgICAgICAgICAgICAgICAgIHtsYWJlbDpcIuaYr1wiLHZhbHVlOlwieWVzXCIsZGVmYXVsdDp0cnVlfSxcclxuICAgICAgICAgICAgICAgICAgICB7bGFiZWw6XCLlkKZcIix2YWx1ZTpcIm5vXCIsZGVmYXVsdDpmYWxzZX1cclxuICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgXVxyXG4gICAgfSk7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGljb25DbGFzc2VzOiBbJ3RleHRidXMtaWNvbi1pbWFnZSddLFxyXG4gICAgICAgIGxhYmVsOiflm77niYfmibnph48nLFxyXG4gICAgICAgIHRvb2x0aXA6IGkxOG4uZ2V0KCdwbHVnaW5zLnRvb2xiYXIuaW1hZ2VUb29sLnRvb2x0aXAnKSxcclxuICAgICAgICB2aWV3Q29udHJvbGxlcjogZm9ybSxcclxuICAgICAgICBxdWVyeVN0YXRlKCkge1xyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgc3RhdGU6IFF1ZXJ5U3RhdGVUeXBlLk5vcm1hbCxcclxuICAgICAgICAgICAgICAgIHZhbHVlOiBudWxsXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfSxcclxuICAgICAgICB1c2VWYWx1ZShmb3JtVmFsdWUpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coZm9ybVZhbHVlKVxyXG4gICAgICAgICAgICBiUGtnPWZvcm1WYWx1ZS5yZXBsYWNlXHJcbiAgICAgICAgICAgIHN0eWxlTGluaz1mb3JtVmFsdWUuaHJlZlxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhiUGtnLHN0eWxlTGluaylcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBwa2dTdHlsZVRvb2woKXtcclxuICAgIHJldHVybiBuZXcgRGlhbG9nVG9vbChwa2dTdHlsZVRvb2xDb25maWdGYWN0b3J5KTtcclxufVxyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbWFnZS50b29sLmpzLm1hcCJdfQ==