import { createElement } from "@textbus/browser";
function cssMin(str) {
    return str
        .replace(/\s*(?=[>{}:;,[])/g, '')
        .replace(/([>{}:;,])\s*/g, '$1')
        .replace(/;}/g, '}').replace(/\s+/, ' ').trim();
}
export const concatHTML = (contents, styleLink) => {
    const html = createElement('html', {});
    const head = createElement('head', {});
    const body = createElement('body', {});
    body.innerHTML = contents.content;
    html.append(head);
    html.append(body);
    //console.log(doc.documentElement.outerHTML);
    //创建一个输出doc，
    const links = [];
    const scripts = [];
    const componentStyles = contents.resourcesList.map(i => i.resources).map(metadata => {
        var _a, _b;
        if (Array.isArray(metadata.links)) {
            links.push(...metadata.links);
        }
        if (Array.isArray(metadata.scripts)) {
            scripts.push(...metadata.scripts);
        }
        return [((_a = metadata.styles) === null || _a === void 0 ? void 0 : _a.join('')) || '', ((_b = metadata.editModeStyles) === null || _b === void 0 ? void 0 : _b.join('')) || ''].join('');
    }).join('');
    links.forEach(link => {
        const linkEle = createElement('link');
        Object.assign(linkEle, link);
        head.appendChild(linkEle);
    });
    scripts.forEach(scriptSrc => {
        const scriptEle = createElement('script');
        scriptEle.src = scriptSrc;
        head.appendChild(scriptEle);
    });
    if (styleLink) {
        const link = {
            rel: 'stylesheet',
            href: styleLink,
        };
        const linkEle = createElement('link');
        Object.assign(linkEle, link);
        head.appendChild(linkEle);
    }
    else {
        const docStyles = cssMin([componentStyles, ...(contents.styleSheets || [])].join(''));
        const style = createElement('style');
        style.innerHTML = docStyles;
        head.appendChild(style);
    }
    return html.outerHTML;
};
export function concatStyle(contents) {
    const componentStyles = contents.resourcesList.map(i => i.resources).map(metadata => {
        var _a, _b;
        return [((_a = metadata.styles) === null || _a === void 0 ? void 0 : _a.join('')) || '', ((_b = metadata.editModeStyles) === null || _b === void 0 ? void 0 : _b.join('')) || ''].join('');
    }).join('');
    const docStyles = cssMin([componentStyles, ...(contents.styleSheets || [])].join(''));
    return docStyles;
    //return styleLink
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3V0cHV0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vdGV4dGJ1cy91dGlscy9vdXRwdXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBRS9DLFNBQVMsTUFBTSxDQUFDLEdBQUc7SUFDZixPQUFPLEdBQUc7U0FDTCxPQUFPLENBQUMsbUJBQW1CLEVBQUUsRUFBRSxDQUFDO1NBQ2hDLE9BQU8sQ0FBQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUM7U0FDL0IsT0FBTyxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO0FBQ3hELENBQUM7QUFDRCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUMsQ0FBQyxRQUFRLEVBQUMsU0FBUyxFQUFFLEVBQUU7SUFDM0MsTUFBTSxJQUFJLEdBQUMsYUFBYSxDQUFDLE1BQU0sRUFBQyxFQUFFLENBQUMsQ0FBQTtJQUNuQyxNQUFNLElBQUksR0FBQyxhQUFhLENBQUMsTUFBTSxFQUFDLEVBQUUsQ0FBQyxDQUFBO0lBQ25DLE1BQU0sSUFBSSxHQUFDLGFBQWEsQ0FBQyxNQUFNLEVBQUMsRUFBRSxDQUFDLENBQUE7SUFDbkMsSUFBSSxDQUFDLFNBQVMsR0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDO0lBQ2hDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7SUFBQSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRXBDLDZDQUE2QztJQUM3QyxZQUFZO0lBQ1osTUFBTSxLQUFLLEdBQU8sRUFBRSxDQUFDO0lBQ3JCLE1BQU0sT0FBTyxHQUFLLEVBQUUsQ0FBQztJQUNyQixNQUFNLGVBQWUsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxT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UUFDaEYsSUFBSSxFQUFFLEVBQUUsRUFBRSxDQUFDO1FBQ1gsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQyxLQUFLLElBQUksSUFBSSxFQUFFLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxLQUFLLElBQUksSUFBSSxFQUFFLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQy9MLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNaLE1BQU0sU0FBUyxHQUFHLE1BQU0sQ0FBQyxDQUFDLGVBQWUsRUFBRSxHQUFHLENBQUMsUUFBUSxDQUFDLFdBQVcsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3RGLE9BQU8sU0FBUyxDQUFBO0lBQ2hCLGtCQUFrQjtBQUN0QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtjcmVhdGVFbGVtZW50fSBmcm9tIFwiQHRleHRidXMvYnJvd3NlclwiO1xyXG5cclxuZnVuY3Rpb24gY3NzTWluKHN0cikge1xyXG4gICAgcmV0dXJuIHN0clxyXG4gICAgICAgIC5yZXBsYWNlKC9cXHMqKD89Wz57fTo7LFtdKS9nLCAnJylcclxuICAgICAgICAucmVwbGFjZSgvKFs+e306OyxdKVxccyovZywgJyQxJylcclxuICAgICAgICAucmVwbGFjZSgvO30vZywgJ30nKS5yZXBsYWNlKC9cXHMrLywgJyAnKS50cmltKCk7XHJcbn1cclxuZXhwb3J0IGNvbnN0IGNvbmNhdEhUTUw9KGNvbnRlbnRzLHN0eWxlTGluaykgPT4ge1xyXG4gICAgY29uc3QgaHRtbD1jcmVhdGVFbGVtZW50KCdodG1sJyx7fSlcclxuICAgIGNvbnN0IGhlYWQ9Y3JlYXRlRWxlbWVudCgnaGVhZCcse30pXHJcbiAgICBjb25zdCBib2R5PWNyZWF0ZUVsZW1lbnQoJ2JvZHknLHt9KVxyXG4gICAgYm9keS5pbm5lckhUTUw9Y29udGVudHMuY29udGVudDtcclxuICAgIGh0bWwuYXBwZW5kKGhlYWQpO2h0bWwuYXBwZW5kKGJvZHkpO1xyXG4gICAgXHJcbiAgICAvL2NvbnNvbGUubG9nKGRvYy5kb2N1bWVudEVsZW1lbnQub3V0ZXJIVE1MKTtcclxuICAgIC8v5Yib5bu65LiA5Liq6L6T5Ye6ZG9j77yMXHJcbiAgICBjb25zdCBsaW5rczphbnkgPSBbXTtcclxuICAgIGNvbnN0IHNjcmlwdHM6YW55PVtdO1xyXG4gICAgY29uc3QgY29tcG9uZW50U3R5bGVzID0gY29udGVudHMucmVzb3VyY2VzTGlzdC5tYXAoaSA9PiBpLnJlc291cmNlcykubWFwKG1ldGFkYXRhID0+IHtcclxuICAgICAgICB2YXIgX2EsIF9iO1xyXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KG1ldGFkYXRhLmxpbmtzKSkge1xyXG4gICAgICAgICAgICBsaW5rcy5wdXNoKC4uLm1ldGFkYXRhLmxpbmtzKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KG1ldGFkYXRhLnNjcmlwdHMpKSB7ICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHNjcmlwdHMucHVzaCguLi5tZXRhZGF0YS5zY3JpcHRzKVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gWygoX2EgPSBtZXRhZGF0YS5zdHlsZXMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5qb2luKCcnKSkgfHwgJycsICgoX2IgPSBtZXRhZGF0YS5lZGl0TW9kZVN0eWxlcykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmpvaW4oJycpKSB8fCAnJ10uam9pbignJyk7XHJcbiAgICB9KS5qb2luKCcnKTtcclxuICAgIGxpbmtzLmZvckVhY2gobGluayA9PiB7XHJcbiAgICAgICAgY29uc3QgbGlua0VsZSA9IGNyZWF0ZUVsZW1lbnQoJ2xpbmsnKTtcclxuICAgICAgICBPYmplY3QuYXNzaWduKGxpbmtFbGUsIGxpbmspO1xyXG4gICAgICAgIGhlYWQuYXBwZW5kQ2hpbGQobGlua0VsZSk7XHJcbiAgICB9KTtcclxuICAgIHNjcmlwdHMuZm9yRWFjaChzY3JpcHRTcmM9PntcclxuICAgICAgICBjb25zdCBzY3JpcHRFbGUgPSBjcmVhdGVFbGVtZW50KCdzY3JpcHQnKSBhcyBIVE1MU2NyaXB0RWxlbWVudDtcclxuICAgICAgICBzY3JpcHRFbGUuc3JjPXNjcmlwdFNyYztcclxuICAgICAgICBoZWFkLmFwcGVuZENoaWxkKHNjcmlwdEVsZSk7XHJcbiAgICB9KVxyXG4gICAgaWYoc3R5bGVMaW5rKXtcclxuICAgICAgICBjb25zdCBsaW5rPXtcclxuICAgICAgICAgICAgcmVsOiAnc3R5bGVzaGVldCcsICAgICAgICBcclxuICAgICAgICAgICAgaHJlZjogc3R5bGVMaW5rLCAgICBcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgbGlua0VsZSA9IGNyZWF0ZUVsZW1lbnQoJ2xpbmsnKTtcclxuICAgICAgICBPYmplY3QuYXNzaWduKGxpbmtFbGUsIGxpbmspO1xyXG4gICAgICAgIGhlYWQuYXBwZW5kQ2hpbGQobGlua0VsZSk7XHJcbiAgICB9ZWxzZXtcclxuICAgICAgICBjb25zdCBkb2NTdHlsZXMgPSBjc3NNaW4oW2NvbXBvbmVudFN0eWxlcywgLi4uKGNvbnRlbnRzLnN0eWxlU2hlZXRzIHx8IFtdKV0uam9pbignJykpO1xyXG4gICAgICAgIGNvbnN0IHN0eWxlID0gY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcclxuICAgICAgICBzdHlsZS5pbm5lckhUTUw9ZG9jU3R5bGVzXHJcbiAgICAgICAgaGVhZC5hcHBlbmRDaGlsZChzdHlsZSk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHJldHVybiBodG1sLm91dGVySFRNTFxyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBjb25jYXRTdHlsZShjb250ZW50cyl7XHJcbiAgICBjb25zdCBjb21wb25lbnRTdHlsZXMgPSBjb250ZW50cy5yZXNvdXJjZXNMaXN0Lm1hcChpID0+IGkucmVzb3VyY2VzKS5tYXAobWV0YWRhdGEgPT4ge1xyXG4gICAgICAgIHZhciBfYSwgX2I7XHJcbiAgICAgICAgcmV0dXJuIFsoKF9hID0gbWV0YWRhdGEuc3R5bGVzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Euam9pbignJykpIHx8ICcnLCAoKF9iID0gbWV0YWRhdGEuZWRpdE1vZGVTdHlsZXMpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5qb2luKCcnKSkgfHwgJyddLmpvaW4oJycpO1xyXG4gICAgfSkuam9pbignJyk7XHJcbiAgICBjb25zdCBkb2NTdHlsZXMgPSBjc3NNaW4oW2NvbXBvbmVudFN0eWxlcywgLi4uKGNvbnRlbnRzLnN0eWxlU2hlZXRzIHx8IFtdKV0uam9pbignJykpO1xyXG4gICAgcmV0dXJuIGRvY1N0eWxlc1xyXG4gICAgLy9yZXR1cm4gc3R5bGVMaW5rXHJcbn0iXX0=