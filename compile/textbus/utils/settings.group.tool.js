import { GroupTool, ToolType } from '@textbus/editor';
import { I18n } from '@textbus/editor';
import { pkgStyleToolConfigFactory } from './settings.pkgStyle.tool';
export function settingsObjectToolConfigFactory(injector) {
    const i18n = injector.get(I18n);
    return {
        iconClasses: ['textbus-icon-components'],
        items: [
            //Object.assign(Object.assign({}, lineHeightToolConfigFactory(injector)), { type: ToolType.Select, label: i18n.get('plugins.toolbar.insertObjectTool.lineHeight') }),
            //Object.assign(Object.assign({}, letterSpacingToolConfigFactory(injector)), { type: ToolType.Select, label: i18n.get('plugins.toolbar.insertObjectTool.letterSpacing') }),
            //Object.assign(Object.assign({}, emojiToolConfigFactory(injector)), { type: ToolType.Dropdown, label: i18n.get('plugins.toolbar.insertObjectTool.emoji') }),
            //Object.assign(Object.assign({}, audioToolConfigFactory(injector)), { type: ToolType.Dialog, label: i18n.get('plugins.toolbar.insertObjectTool.audio') }),
            //Object.assign(Object.assign({}, videoToolConfigFactory(injector)), { type: ToolType.Dialog, label: i18n.get('plugins.toolbar.insertObjectTool.video') }),
            //Object.assign(Object.assign({}, superscriptToolConfigFactory(injector)), { type: ToolType.Button, label: i18n.get('plugins.toolbar.insertObjectTool.superscript') }),
            //Object.assign(Object.assign({}, subscriptToolConfigFactory(injector)), { type: ToolType.Button, label: i18n.get('plugins.toolbar.insertObjectTool.subscript') }),
            //Object.assign(Object.assign({}, codeToolConfigFactory(injector)), { type: ToolType.Button, label: i18n.get('plugins.toolbar.insertObjectTool.code') }),
            Object.assign(Object.assign({}, pkgStyleToolConfigFactory(injector)), { type: ToolType.Dialog }),
        ] //[todoListTool,timelineTool,stepTool],
    };
}
export function settingsGroupTool() {
    return new GroupTool(settingsObjectToolConfigFactory);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0dGluZ3MuZ3JvdXAudG9vbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3RleHRidXMvdXRpbHMvc2V0dGluZ3MuZ3JvdXAudG9vbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWtCLFNBQVMsRUFBRSxRQUFRLEVBQTRCLE1BQU0saUJBQWlCLENBQUM7QUFDaEcsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3JFLE1BQU0sVUFBVSwrQkFBK0IsQ0FBQyxRQUFRO0lBQ3BELE1BQU0sSUFBSSxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDaEMsT0FBTztRQUNILFdBQVcsRUFBQyxDQUFDLHlCQUF5QixDQUFDO1FBQ3ZDLEtBQUssRUFBRTtZQUNILHFLQUFxSztZQUNySywyS0FBMks7WUFDM0ssNkpBQTZKO1lBQzdKLDJKQUEySjtZQUMzSiwySkFBMko7WUFDM0osdUtBQXVLO1lBQ3ZLLG1LQUFtSztZQUNuSyx5SkFBeUo7WUFDekosTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSx5QkFBeUIsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLEVBQUUsSUFBSSxFQUFFLFFBQVEsQ0FBQyxNQUFNLEVBQUMsQ0FBaUI7U0FLOUcsQ0FBQSx1Q0FBdUM7S0FDL0MsQ0FBQztBQUNOLENBQUM7QUFDRCxNQUFNLFVBQVUsaUJBQWlCO0lBQzdCLE9BQU8sSUFBSSxTQUFTLENBQUMsK0JBQStCLENBQUMsQ0FBQztBQUMxRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3JvdXBUb29sQ29uZmlnLEdyb3VwVG9vbCwgVG9vbFR5cGUsIERpYWxvZ1Rvb2wsIERyb3Bkb3duTWVudSB9IGZyb20gJ0B0ZXh0YnVzL2VkaXRvcic7XHJcbmltcG9ydCB7IEkxOG4gfSBmcm9tICdAdGV4dGJ1cy9lZGl0b3InO1xyXG5pbXBvcnQgeyBwa2dTdHlsZVRvb2xDb25maWdGYWN0b3J5IH0gZnJvbSAnLi9zZXR0aW5ncy5wa2dTdHlsZS50b29sJztcclxuZXhwb3J0IGZ1bmN0aW9uIHNldHRpbmdzT2JqZWN0VG9vbENvbmZpZ0ZhY3RvcnkoaW5qZWN0b3IpOkdyb3VwVG9vbENvbmZpZ3tcclxuICAgIGNvbnN0IGkxOG4gPSBpbmplY3Rvci5nZXQoSTE4bik7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGljb25DbGFzc2VzOlsndGV4dGJ1cy1pY29uLWNvbXBvbmVudHMnXSxcclxuICAgICAgICBpdGVtczogWy8vT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBwcmVUb29sQ29uZmlnRmFjdG9yeShpbmplY3RvcikpLCB7IHR5cGU6IFRvb2xUeXBlLlNlbGVjdCwgbGFiZWw6IGkxOG4uZ2V0KCdwbHVnaW5zLnRvb2xiYXIuaW5zZXJ0T2JqZWN0VG9vbC5zb3VyY2VDb2RlJykgfSksXHJcbiAgICAgICAgICAgIC8vT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBsaW5lSGVpZ2h0VG9vbENvbmZpZ0ZhY3RvcnkoaW5qZWN0b3IpKSwgeyB0eXBlOiBUb29sVHlwZS5TZWxlY3QsIGxhYmVsOiBpMThuLmdldCgncGx1Z2lucy50b29sYmFyLmluc2VydE9iamVjdFRvb2wubGluZUhlaWdodCcpIH0pLFxyXG4gICAgICAgICAgICAvL09iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgbGV0dGVyU3BhY2luZ1Rvb2xDb25maWdGYWN0b3J5KGluamVjdG9yKSksIHsgdHlwZTogVG9vbFR5cGUuU2VsZWN0LCBsYWJlbDogaTE4bi5nZXQoJ3BsdWdpbnMudG9vbGJhci5pbnNlcnRPYmplY3RUb29sLmxldHRlclNwYWNpbmcnKSB9KSxcclxuICAgICAgICAgICAgLy9PYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGVtb2ppVG9vbENvbmZpZ0ZhY3RvcnkoaW5qZWN0b3IpKSwgeyB0eXBlOiBUb29sVHlwZS5Ecm9wZG93biwgbGFiZWw6IGkxOG4uZ2V0KCdwbHVnaW5zLnRvb2xiYXIuaW5zZXJ0T2JqZWN0VG9vbC5lbW9qaScpIH0pLFxyXG4gICAgICAgICAgICAvL09iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgYXVkaW9Ub29sQ29uZmlnRmFjdG9yeShpbmplY3RvcikpLCB7IHR5cGU6IFRvb2xUeXBlLkRpYWxvZywgbGFiZWw6IGkxOG4uZ2V0KCdwbHVnaW5zLnRvb2xiYXIuaW5zZXJ0T2JqZWN0VG9vbC5hdWRpbycpIH0pLFxyXG4gICAgICAgICAgICAvL09iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgdmlkZW9Ub29sQ29uZmlnRmFjdG9yeShpbmplY3RvcikpLCB7IHR5cGU6IFRvb2xUeXBlLkRpYWxvZywgbGFiZWw6IGkxOG4uZ2V0KCdwbHVnaW5zLnRvb2xiYXIuaW5zZXJ0T2JqZWN0VG9vbC52aWRlbycpIH0pLFxyXG4gICAgICAgICAgICAvL09iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgc3VwZXJzY3JpcHRUb29sQ29uZmlnRmFjdG9yeShpbmplY3RvcikpLCB7IHR5cGU6IFRvb2xUeXBlLkJ1dHRvbiwgbGFiZWw6IGkxOG4uZ2V0KCdwbHVnaW5zLnRvb2xiYXIuaW5zZXJ0T2JqZWN0VG9vbC5zdXBlcnNjcmlwdCcpIH0pLFxyXG4gICAgICAgICAgICAvL09iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgc3Vic2NyaXB0VG9vbENvbmZpZ0ZhY3RvcnkoaW5qZWN0b3IpKSwgeyB0eXBlOiBUb29sVHlwZS5CdXR0b24sIGxhYmVsOiBpMThuLmdldCgncGx1Z2lucy50b29sYmFyLmluc2VydE9iamVjdFRvb2wuc3Vic2NyaXB0JykgfSksXHJcbiAgICAgICAgICAgIC8vT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBjb2RlVG9vbENvbmZpZ0ZhY3RvcnkoaW5qZWN0b3IpKSwgeyB0eXBlOiBUb29sVHlwZS5CdXR0b24sIGxhYmVsOiBpMThuLmdldCgncGx1Z2lucy50b29sYmFyLmluc2VydE9iamVjdFRvb2wuY29kZScpIH0pLFxyXG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHBrZ1N0eWxlVG9vbENvbmZpZ0ZhY3RvcnkoaW5qZWN0b3IpKSwgeyB0eXBlOiBUb29sVHlwZS5EaWFsb2d9KSBhcyBEcm9wZG93bk1lbnUsXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLy9PYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGxlZnRUb1JpZ2h0VG9vbENvbmZpZ0ZhY3RvcnkoaW5qZWN0b3IpKSwgeyB0eXBlOiBUb29sVHlwZS5CdXR0b24sIGxhYmVsOiBpMThuLmdldCgncGx1Z2lucy50b29sYmFyLmluc2VydE9iamVjdFRvb2wubGVmdFRvUmlnaHQnKSB9KSxcclxuICAgICAgICAgICAgLy9PYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHJpZ2h0VG9MZWZ0VG9vbENvbmZpZ0ZhY3RvcnkoaW5qZWN0b3IpKSwgeyB0eXBlOiBUb29sVHlwZS5CdXR0b24sIGxhYmVsOiBpMThuLmdldCgncGx1Z2lucy50b29sYmFyLmluc2VydE9iamVjdFRvb2wucmlnaHRUb0xlZnQnKSB9KVxyXG4gICAgICAgICAgICBdLy9bdG9kb0xpc3RUb29sLHRpbWVsaW5lVG9vbCxzdGVwVG9vbF0sXHJcbiAgICB9O1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBzZXR0aW5nc0dyb3VwVG9vbCgpe1xyXG4gICAgcmV0dXJuIG5ldyBHcm91cFRvb2woc2V0dGluZ3NPYmplY3RUb29sQ29uZmlnRmFjdG9yeSk7XHJcbn0iXX0=