import { LinkJumpTipPlugin, Toolbar, } from '@textbus/editor';
//导入ComponentLoader
import { audioComponentLoader, blockComponentLoader, blockquoteComponentLoader, headingComponentLoader, imageComponentLoader, listComponentLoader, paragraphComponentLoader, preComponentLoader, tableComponentLoader, videoComponentLoader } from "@textbus/editor";
import { alertComponentLoader, todoListComponentLoader, timelineComponentLoader, stepComponentLoader, wordExplainComponentLoader, progressComponentLoader, katexInlineComponentLoader, imageCardComponentLoader, jumbotronComponentLoader, cesiumComponentLoader, detailComponentLoader } from "./components/_public-api";
//FormatLoader
import { boldFormatLoader, italicFormatLoader, colorFormatLoader, fontFamilyFormatLoader, fontSizeFormatLoader, letterSpacingFormatLoader, lineHeightFormatLoader, strikeThroughFormatLoader, subscriptFormatLoader, superscriptFormatLoader, underlineFormatLoader, codeFormatLoader, blockBackgroundColorFormatLoader, linkFormatLoader, textBackgroundColorFormatLoader, textAlignFormatLoader, textIndentFormatLoader, verticalAlignFormatLoader, dirFormatLoader } from "@textbus/editor";
//Tool
import { historyBackTool, historyForwardTool, defaultGroupTool, headingTool, boldTool, italicTool, strikeThroughTool, underlineTool, olTool, ulTool, fontSizeTool, textIndentTool, colorTool, textBackgroundTool, insertParagraphBeforeTool, insertParagraphAfterTool, fontFamilyTool, linkTool, unlinkTool, imageTool, textAlignTool, tableAddTool, tableRemoveTool, cleanTool } from "@textbus/editor";
import { libraryGroupTool, libraryDropdownTool } from "./plugin/_public-api";
import { OutlinesPlugin } from './plugin/_public-api';
import { TreeGraphComponentLoader } from './components/antvG6/TreeGraph.component';
import { LibraryDrawerPlugin } from './plugin/library.drawer.plugin';
import { pageConfigComponentLoader } from './components/_config/config.component';
import { PageConfigPlugin } from './plugin/page-config.plugin/pageConfig.plugin';
//const controlPanel=new UIControlPanel();
export const defaultComponentLoader = [
    pageConfigComponentLoader,
    alertComponentLoader,
    todoListComponentLoader,
    timelineComponentLoader,
    stepComponentLoader,
    wordExplainComponentLoader,
    progressComponentLoader,
    katexInlineComponentLoader,
    //katexBlockComponentLoader,
    imageCardComponentLoader,
    jumbotronComponentLoader,
    cesiumComponentLoader,
    detailComponentLoader,
    TreeGraphComponentLoader,
    audioComponentLoader,
    blockComponentLoader,
    blockquoteComponentLoader,
    headingComponentLoader,
    imageComponentLoader,
    listComponentLoader,
    paragraphComponentLoader,
    preComponentLoader,
    tableComponentLoader,
    videoComponentLoader,
];
export const defaultFormatLoaders = [
    boldFormatLoader,
    italicFormatLoader,
    colorFormatLoader,
    fontFamilyFormatLoader,
    fontSizeFormatLoader,
    letterSpacingFormatLoader,
    lineHeightFormatLoader,
    strikeThroughFormatLoader,
    subscriptFormatLoader,
    superscriptFormatLoader,
    underlineFormatLoader,
    codeFormatLoader,
    blockBackgroundColorFormatLoader,
    linkFormatLoader,
    textBackgroundColorFormatLoader,
    textAlignFormatLoader,
    textIndentFormatLoader,
    verticalAlignFormatLoader,
    dirFormatLoader
];
export const defaultToolFactories = [
    [historyBackTool, historyForwardTool],
    [defaultGroupTool],
    [headingTool],
    [boldTool, italicTool, strikeThroughTool, underlineTool],
    [olTool, ulTool],
    [fontSizeTool, textIndentTool],
    [colorTool, textBackgroundTool],
    [insertParagraphBeforeTool, insertParagraphAfterTool],
    [fontFamilyTool],
    [linkTool, unlinkTool],
    [imageTool],
    [textAlignTool],
    [tableAddTool, tableRemoveTool],
    [cleanTool],
    [libraryGroupTool],
    [libraryDropdownTool],
];
export const defaultOptions = {
    editingStyleSheets: [
        `[style*=color]:not([style*=background-color])
            a {color: inherit;}`,
        `a {text-decoration: underline; color: #449fdb; cursor: text;}`,
        `[textbus-editable=off] > * {
            user-select: text;
            cursor: default;
          }`
    ],
    //组件加载
    componentLoaders: defaultComponentLoader,
    ///格式
    formatLoaders: defaultFormatLoaders,
    plugins: [
        //工具栏配置
        new Toolbar(defaultToolFactories),
        new LinkJumpTipPlugin(),
        new OutlinesPlugin(),
        //new WordCountPlugin(),
        //new WordCountSelected(),
        new LibraryDrawerPlugin(true),
        new LibraryDrawerPlugin(false),
        new PageConfigPlugin()
    ],
    providers: [],
    //content:'<p>ddd</p>',
    placeholder: "占位测试"
};
//# sourceMappingURL=data:application/json;base64,